####################################################################################################
# Script that make image of fat from fs folder and generate c file with content
####################################################################################################
# Constants :
DRIVE_LABEL="JSPico"
DISK_FAT_TYPE=12
DRIVE_SIZE_KB=$(du -sk fs | cut -f1)
if [ $DRIVE_SIZE_KB -lt 64 ]; then
    DRIVE_SIZE_KB=64
fi
DISK_BLOCK_SIZE=512
DISK_BLOCK_NUM=$((DRIVE_SIZE_KB*1024/DISK_BLOCK_SIZE))
#
CREATE_FILE="src/msc/msc_disk_data_default.c"
IMG_FILE="filesystem.img"
HEX_FILE_TMP="filesystem.hex.tmp"
HEX_FILE="filesystem.hex"
####################################################################################################
echo "Deleting stale fs."
rm -rf $IMG_FILE
echo "Preparing file system."
echo "For size: $DRIVE_SIZE_KB KB."
echo "Blocks: $DISK_BLOCK_NUM."
# make fat image of file system
mkfs.fat -F $DISK_FAT_TYPE -S $DISK_BLOCK_SIZE -v -C "$IMG_FILE" $DRIVE_SIZE_KB
echo "Copying files to file system."
mcopy -i $IMG_FILE fs/*.* ::
echo "Setting device label to $DRIVE_LABEL"
mlabel ::"$DRIVE_LABEL" -i $IMG_FILE
echo "creating hex dump of image."
xxd -i $IMG_FILE > $HEX_FILE_TMP
cat $HEX_FILE_TMP | grep "0x" > $HEX_FILE
rm -rf $HEX_FILE_TMP
HEXDATA=$(cat $HEX_FILE)
# create disk file to source code ##################################################################
rm -rf $CREATE_FILE
touch $CREATE_FILE
echo "
//--------------------------------------------------------------------------------------------------
// Disc data from fs folder
//--------------------------------------------------------------------------------------------------
// Autogenerated file, do not edit, edit content in fs folder in root of project
//--------------------------------------------------------------------------------------------------
#include <stdlib.h>
#include <stdint.h>
#include <stdbool.h>
//--------------------------------------------------------------------------------------------------
enum {
    DISK_BLOCK_NUM  = $DISK_BLOCK_NUM,
    DISK_BLOCK_SIZE = $DISK_BLOCK_SIZE
};
//--------------------------------------------------------------------------------------------------
const char DEV_NAME[] = \"JSPico     \";
const int DISK_SIZE = DISK_BLOCK_NUM * DISK_BLOCK_SIZE;
//--------------------------------------------------------------------------------------------------
uint8_t msc_disk[DISK_BLOCK_NUM][DISK_BLOCK_SIZE] = {
$HEXDATA
};
//--------------------------------------------------------------------------------------------------
" > $CREATE_FILE
echo "Data successfully created..."
####################################################################################################
